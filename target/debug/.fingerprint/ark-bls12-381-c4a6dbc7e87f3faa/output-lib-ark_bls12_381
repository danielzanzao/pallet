{"$message_type":"diagnostic","message":"method `deserialize_with_mode` has an incompatible type for trait","code":{"code":"E0053","explanation":"The parameters of any trait method must match between a trait implementation\nand the trait definition.\n\nErroneous code example:\n\n```compile_fail,E0053\ntrait Foo {\n    fn foo(x: u16);\n    fn bar(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    // error, expected u16, found i16\n    fn foo(x: i16) { }\n\n    // error, types differ in mutability\n    fn bar(&mut self) { }\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g1.rs","byte_start":2783,"byte_end":2806,"line_start":86,"line_end":86,"column_start":19,"column_end":42,"is_primary":true,"text":[{"text":"        compress: ark_serialize::Compress,","highlight_start":19,"highlight_end":42}],"label":"expected `ark_serialize::Compress`, found `Compress`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected signature `fn(_, ark_serialize::Compress, ark_serialize::Validate) -> Result<_, ark_serialize::error::SerializationError>`\n   found signature `fn(_, Compress, Validate) -> Result<_, SerializationError>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change the parameter type to match the trait","code":null,"level":"help","spans":[{"file_name":"/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g1.rs","byte_start":2783,"byte_end":2806,"line_start":86,"line_end":86,"column_start":19,"column_end":42,"is_primary":true,"text":[{"text":"        compress: ark_serialize::Compress,","highlight_start":19,"highlight_end":42}],"label":null,"suggested_replacement":"ark_serialize::Compress","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0053]\u001b[0m\u001b[0m\u001b[1m: method `deserialize_with_mode` has an incompatible type for trait\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g1.rs:86:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        compress: ark_serialize::Compress,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `ark_serialize::Compress`, found `Compress`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected signature `fn(_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mark_serialize::Compress\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35mark_serialize::Validate\u001b[0m\u001b[0m) -> Result<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mark_serialize::error::SerializationError\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m              found signature `fn(_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mCompress\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35mValidate\u001b[0m\u001b[0m) -> Result<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mSerializationError\u001b[0m\u001b[0m>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `serialize_with_mode` has an incompatible type for trait","code":{"code":"E0053","explanation":"The parameters of any trait method must match between a trait implementation\nand the trait definition.\n\nErroneous code example:\n\n```compile_fail,E0053\ntrait Foo {\n    fn foo(x: u16);\n    fn bar(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    // error, expected u16, found i16\n    fn foo(x: i16) { }\n\n    // error, types differ in mutability\n    fn bar(&mut self) { }\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g1.rs","byte_start":3423,"byte_end":3446,"line_start":105,"line_end":105,"column_start":19,"column_end":42,"is_primary":true,"text":[{"text":"        compress: ark_serialize::Compress,","highlight_start":19,"highlight_end":42}],"label":"expected `ark_serialize::Compress`, found `Compress`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected signature `fn(&ark_ec::short_weierstrass::Affine<_>, _, ark_serialize::Compress) -> Result<_, ark_serialize::error::SerializationError>`\n   found signature `fn(&ark_ec::short_weierstrass::Affine<_>, _, Compress) -> Result<_, SerializationError>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change the parameter type to match the trait","code":null,"level":"help","spans":[{"file_name":"/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g1.rs","byte_start":3423,"byte_end":3446,"line_start":105,"line_end":105,"column_start":19,"column_end":42,"is_primary":true,"text":[{"text":"        compress: ark_serialize::Compress,","highlight_start":19,"highlight_end":42}],"label":null,"suggested_replacement":"ark_serialize::Compress","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0053]\u001b[0m\u001b[0m\u001b[1m: method `serialize_with_mode` has an incompatible type for trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g1.rs:105:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        compress: ark_serialize::Compress,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `ark_serialize::Compress`, found `Compress`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected signature `fn(&ark_ec::short_weierstrass::Affine<_>, _, \u001b[0m\u001b[0m\u001b[1m\u001b[35mark_serialize::Compress\u001b[0m\u001b[0m) -> Result<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mark_serialize::error::SerializationError\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m               found signature `fn(&ark_ec::short_weierstrass::Affine<_>, _, \u001b[0m\u001b[0m\u001b[1m\u001b[35mCompress\u001b[0m\u001b[0m) -> Result<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mSerializationError\u001b[0m\u001b[0m>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `serialized_size` has an incompatible type for trait","code":{"code":"E0053","explanation":"The parameters of any trait method must match between a trait implementation\nand the trait definition.\n\nErroneous code example:\n\n```compile_fail,E0053\ntrait Foo {\n    fn foo(x: u16);\n    fn bar(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    // error, expected u16, found i16\n    fn foo(x: i16) { }\n\n    // error, types differ in mutability\n    fn bar(&mut self) { }\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g1.rs","byte_start":4530,"byte_end":4538,"line_start":136,"line_end":136,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"    fn serialized_size(compress: Compress) -> usize {","highlight_start":34,"highlight_end":42}],"label":"expected `ark_serialize::Compress`, found `Compress`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected signature `fn(ark_serialize::Compress) -> _`\n   found signature `fn(Compress) -> _`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change the parameter type to match the trait","code":null,"level":"help","spans":[{"file_name":"/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g1.rs","byte_start":4530,"byte_end":4538,"line_start":136,"line_end":136,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"    fn serialized_size(compress: Compress) -> usize {","highlight_start":34,"highlight_end":42}],"label":null,"suggested_replacement":"ark_serialize::Compress","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0053]\u001b[0m\u001b[0m\u001b[1m: method `serialized_size` has an incompatible type for trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g1.rs:136:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn serialized_size(compress: Compress) -> usize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `ark_serialize::Compress`, found `Compress`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected signature `fn(\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_serialize::Compress\u001b[0m\u001b[0m) -> _`\u001b[0m\n\u001b[0m               found signature `fn(\u001b[0m\u001b[0m\u001b[1m\u001b[35mCompress\u001b[0m\u001b[0m) -> _`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: change the parameter type to match the trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn serialized_size(compress: \u001b[0m\u001b[0m\u001b[38;5;10mark_serialize::Compress\u001b[0m\u001b[0m) -> usize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `deserialize_with_mode` has an incompatible type for trait","code":{"code":"E0053","explanation":"The parameters of any trait method must match between a trait implementation\nand the trait definition.\n\nErroneous code example:\n\n```compile_fail,E0053\ntrait Foo {\n    fn foo(x: u16);\n    fn bar(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    // error, expected u16, found i16\n    fn foo(x: i16) { }\n\n    // error, types differ in mutability\n    fn bar(&mut self) { }\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g2.rs","byte_start":3788,"byte_end":3811,"line_start":120,"line_end":120,"column_start":19,"column_end":42,"is_primary":true,"text":[{"text":"        compress: ark_serialize::Compress,","highlight_start":19,"highlight_end":42}],"label":"expected `ark_serialize::Compress`, found `Compress`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected signature `fn(_, ark_serialize::Compress, ark_serialize::Validate) -> Result<_, ark_serialize::error::SerializationError>`\n   found signature `fn(_, Compress, Validate) -> Result<_, SerializationError>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change the parameter type to match the trait","code":null,"level":"help","spans":[{"file_name":"/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g2.rs","byte_start":3788,"byte_end":3811,"line_start":120,"line_end":120,"column_start":19,"column_end":42,"is_primary":true,"text":[{"text":"        compress: ark_serialize::Compress,","highlight_start":19,"highlight_end":42}],"label":null,"suggested_replacement":"ark_serialize::Compress","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0053]\u001b[0m\u001b[0m\u001b[1m: method `deserialize_with_mode` has an incompatible type for trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g2.rs:120:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        compress: ark_serialize::Compress,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `ark_serialize::Compress`, found `Compress`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected signature `fn(_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mark_serialize::Compress\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35mark_serialize::Validate\u001b[0m\u001b[0m) -> Result<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mark_serialize::error::SerializationError\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m               found signature `fn(_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mCompress\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m\u001b[35mValidate\u001b[0m\u001b[0m) -> Result<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mSerializationError\u001b[0m\u001b[0m>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `serialize_with_mode` has an incompatible type for trait","code":{"code":"E0053","explanation":"The parameters of any trait method must match between a trait implementation\nand the trait definition.\n\nErroneous code example:\n\n```compile_fail,E0053\ntrait Foo {\n    fn foo(x: u16);\n    fn bar(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    // error, expected u16, found i16\n    fn foo(x: i16) { }\n\n    // error, types differ in mutability\n    fn bar(&mut self) { }\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g2.rs","byte_start":4428,"byte_end":4451,"line_start":139,"line_end":139,"column_start":19,"column_end":42,"is_primary":true,"text":[{"text":"        compress: ark_serialize::Compress,","highlight_start":19,"highlight_end":42}],"label":"expected `ark_serialize::Compress`, found `Compress`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected signature `fn(&ark_ec::short_weierstrass::Affine<_>, _, ark_serialize::Compress) -> Result<_, ark_serialize::error::SerializationError>`\n   found signature `fn(&ark_ec::short_weierstrass::Affine<_>, _, Compress) -> Result<_, SerializationError>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change the parameter type to match the trait","code":null,"level":"help","spans":[{"file_name":"/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g2.rs","byte_start":4428,"byte_end":4451,"line_start":139,"line_end":139,"column_start":19,"column_end":42,"is_primary":true,"text":[{"text":"        compress: ark_serialize::Compress,","highlight_start":19,"highlight_end":42}],"label":null,"suggested_replacement":"ark_serialize::Compress","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0053]\u001b[0m\u001b[0m\u001b[1m: method `serialize_with_mode` has an incompatible type for trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g2.rs:139:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        compress: ark_serialize::Compress,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `ark_serialize::Compress`, found `Compress`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected signature `fn(&ark_ec::short_weierstrass::Affine<_>, _, \u001b[0m\u001b[0m\u001b[1m\u001b[35mark_serialize::Compress\u001b[0m\u001b[0m) -> Result<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mark_serialize::error::SerializationError\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m               found signature `fn(&ark_ec::short_weierstrass::Affine<_>, _, \u001b[0m\u001b[0m\u001b[1m\u001b[35mCompress\u001b[0m\u001b[0m) -> Result<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mSerializationError\u001b[0m\u001b[0m>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `serialized_size` has an incompatible type for trait","code":{"code":"E0053","explanation":"The parameters of any trait method must match between a trait implementation\nand the trait definition.\n\nErroneous code example:\n\n```compile_fail,E0053\ntrait Foo {\n    fn foo(x: u16);\n    fn bar(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    // error, expected u16, found i16\n    fn foo(x: i16) { }\n\n    // error, types differ in mutability\n    fn bar(&mut self) { }\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g2.rs","byte_start":5899,"byte_end":5922,"line_start":179,"line_end":179,"column_start":34,"column_end":57,"is_primary":true,"text":[{"text":"    fn serialized_size(compress: ark_serialize::Compress) -> usize {","highlight_start":34,"highlight_end":57}],"label":"expected `ark_serialize::Compress`, found `Compress`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected signature `fn(ark_serialize::Compress) -> _`\n   found signature `fn(Compress) -> _`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change the parameter type to match the trait","code":null,"level":"help","spans":[{"file_name":"/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g2.rs","byte_start":5899,"byte_end":5922,"line_start":179,"line_end":179,"column_start":34,"column_end":57,"is_primary":true,"text":[{"text":"    fn serialized_size(compress: ark_serialize::Compress) -> usize {","highlight_start":34,"highlight_end":57}],"label":null,"suggested_replacement":"ark_serialize::Compress","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0053]\u001b[0m\u001b[0m\u001b[1m: method `serialized_size` has an incompatible type for trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/danie/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ark-bls12-381-0.4.0/src/curves/g2.rs:179:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn serialized_size(compress: ark_serialize::Compress) -> usize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `ark_serialize::Compress`, found `Compress`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected signature `fn(\u001b[0m\u001b[0m\u001b[1m\u001b[35mark_serialize::Compress\u001b[0m\u001b[0m) -> _`\u001b[0m\n\u001b[0m               found signature `fn(\u001b[0m\u001b[0m\u001b[1m\u001b[35mCompress\u001b[0m\u001b[0m) -> _`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 6 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 6 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0053`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0053`.\u001b[0m\n"}
